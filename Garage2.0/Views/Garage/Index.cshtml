@using Garage2._0.Models
@using PagedList.Mvc
@model PagedList.IPagedList<Garage2._0.Models.Vehicle>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Parked vehicles";
    var first = new Vehicle();
}

<h2>@ViewBag.Title</h2>
<p>
    @ViewBag.Vacant
</p>
@if (ViewBag.HasVacantSpots) {
    <p>
        @Html.ActionLink("Checkin new vehicle", "Checkin")
    </p>
}

<p>
    @using (Html.BeginForm("Index", "Garage", FormMethod.Get))
    {
        <span>
            Find by registration number: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
            @Html.DropDownList("selectedvehicletype", new SelectList(Enum.GetNames(typeof(Vehicle.VehicleType))), "All vehicle types", htmlAttributes: new { @class = "selectStyle" })

            <input type="submit" value="Search" />

        </span>

        @*<span>
            <a href="#" data-toggle="collapse" data-target="#advancedsearch">Advanced search...</a><br /><br />
            <span id="advancedsearch" class="collapse">
                Find by vehicle color:
                @Html.DropDownList("selectedvehiclecolor", new SelectList(Enum.GetNames(typeof(Vehicle.VehicleColor))), "All colors", htmlAttributes: new { @class = "selectStyle" })
                Find by checkin date:
                @Html.TextBox("selectcheckintime", "", htmlAttributes: new { @class = "searchTimeTextStyle", @placeholder = "yyyy-mm-dd" })
            </span>
        </span>*@
    }
</p>
   
<table class="table table-striped">
    <tr>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => first.Type).ToString(), "Index", new { orderBy = "type", currentFilter = ViewBag.CurrentFilter})
            @*@Html.DisplayNameFor(model => first.Type)*@
        </th>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => first.RegNumber).ToString(), "Index", new { orderBy = "regnumber", currentFilter = ViewBag.CurrentFilter })
            @*@Html.DisplayNameFor(model => first.RegNumber)*@
        </th>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => first.Color).ToString(), "Index", new { orderBy = "color", currentFilter = ViewBag.CurrentFilter })
            @*@Html.DisplayNameFor(model => first.Color)*@
        </th>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => first.Timestamp).ToString(), "Index")
            @*@Html.DisplayNameFor(model => first.Timestamp)*@
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RegNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Color)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Timestamp)
            </td>
            <td>
                @Html.ActionLink("Details", "Details", new { id=item.Id }) |
                @Html.ActionLink("Checkout", "Checkout", new { id=item.Id })
            </td>
        </tr>
    }

</table>
@if (Model.PageCount > 1)
{
    <p>
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        @Html.PagedListPager(Model, page => Url.Action("Index", new {page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, selectedvehicletype = ViewBag.selectedvehicletype, selectedvehiclecolor = ViewBag.selectedvehiclecolor}))
    </p>
}

<!-- selectvehicletype, selectvehiclecolor, -->
